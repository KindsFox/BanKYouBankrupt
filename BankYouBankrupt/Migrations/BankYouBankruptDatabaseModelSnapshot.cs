// <auto-generated />
using System;
using BankYouBankruptDatabaseImplement;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BankYouBankruptDatabaseImplement.Migrations
{
    [DbContext(typeof(BankYouBankruptDatabase))]
    partial class BankYouBankruptDatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BankYouBankruptDatabaseImplement.Models.Applications", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AplicationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AplicationNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("AplicationSum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Application");
                });

            modelBuilder.Entity("BankYouBankruptDatabaseImplement.Models.BillCashWithdrawal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BillsId")
                        .HasColumnType("int");

                    b.Property<int>("CashWithdrawalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillsId");

                    b.HasIndex("CashWithdrawalId");

                    b.ToTable("CashWithdrawalBills");
                });

            modelBuilder.Entity("BankYouBankruptDatabaseImplement.Models.Bills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("BillsBalance")
                        .HasColumnType("real");

                    b.Property<string>("BillsNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bill");
                });

            modelBuilder.Entity("BankYouBankruptDatabaseImplement.Models.Cards", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardsNumder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SecurityCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("ServiceEndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Card");
                });

            modelBuilder.Entity("BankYouBankruptDatabaseImplement.Models.CardsApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AplicationId")
                        .HasColumnType("int");

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AplicationId");

                    b.HasIndex("CardId");

                    b.ToTable("CardsApplications");
                });

            modelBuilder.Entity("BankYouBankruptDatabaseImplement.Models.CardsOperation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<int>("OperationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("OperationId");

                    b.ToTable("CardsOperations");
                });

            modelBuilder.Entity("BankYouBankruptDatabaseImplement.Models.CashWithdrawal", b =>
                {
                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<bool>("AvailabilityApplication")
                        .HasColumnType("bit");

                    b.HasKey("ApplicationId");

                    b.ToTable("CashWithdrawals");
                });

            modelBuilder.Entity("BankYouBankruptDatabaseImplement.Models.MoneyTransfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OperationId")
                        .HasColumnType("int");

                    b.Property<string>("OperationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recipient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipientsCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SendersCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OperationId");

                    b.ToTable("MoneyTransfers");
                });

            modelBuilder.Entity("BankYouBankruptDatabaseImplement.Models.MoneyTransferApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AplicationId")
                        .HasColumnType("int");

                    b.Property<int>("MoneyTransferId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AplicationId");

                    b.HasIndex("MoneyTransferId");

                    b.ToTable("MoneyTransferApplications");
                });

            modelBuilder.Entity("BankYouBankruptDatabaseImplement.Models.MoneyTransferBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BillsId")
                        .HasColumnType("int");

                    b.Property<int>("MoneyTransferId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillsId");

                    b.HasIndex("MoneyTransferId");

                    b.ToTable("MoneyTransferBills");
                });

            modelBuilder.Entity("BankYouBankruptDatabaseImplement.Models.Operations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("OperationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperationNumber")
                        .HasColumnType("int");

                    b.Property<string>("OperationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Operation");
                });

            modelBuilder.Entity("BankYouBankruptDatabaseImplement.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FIO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BankYouBankruptDatabaseImplement.Models.Applications", b =>
                {
                    b.HasOne("BankYouBankruptDatabaseImplement.Models.User", "User")
                        .WithMany("Aplications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BankYouBankruptDatabaseImplement.Models.BillCashWithdrawal", b =>
                {
                    b.HasOne("BankYouBankruptDatabaseImplement.Models.Bills", "Bill")
                        .WithMany("CashWithdrawalBills")
                        .HasForeignKey("BillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BankYouBankruptDatabaseImplement.Models.CashWithdrawal", "CashWithdrawals")
                        .WithMany("CashWithdrawalBills")
                        .HasForeignKey("CashWithdrawalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BankYouBankruptDatabaseImplement.Models.Cards", b =>
                {
                    b.HasOne("BankYouBankruptDatabaseImplement.Models.User", "User")
                        .WithMany("Cards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BankYouBankruptDatabaseImplement.Models.CardsApplication", b =>
                {
                    b.HasOne("BankYouBankruptDatabaseImplement.Models.Applications", "Application")
                        .WithMany("CardsAplications")
                        .HasForeignKey("AplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BankYouBankruptDatabaseImplement.Models.Cards", "Card")
                        .WithMany("CardsAplications")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BankYouBankruptDatabaseImplement.Models.CardsOperation", b =>
                {
                    b.HasOne("BankYouBankruptDatabaseImplement.Models.Cards", "Card")
                        .WithMany("CardsOperations")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BankYouBankruptDatabaseImplement.Models.Operations", "Operation")
                        .WithMany("CardsOperations")
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BankYouBankruptDatabaseImplement.Models.CashWithdrawal", b =>
                {
                    b.HasOne("BankYouBankruptDatabaseImplement.Models.Applications", "Application")
                        .WithOne("CashWithdrawals")
                        .HasForeignKey("BankYouBankruptDatabaseImplement.Models.CashWithdrawal", "ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BankYouBankruptDatabaseImplement.Models.MoneyTransfer", b =>
                {
                    b.HasOne("BankYouBankruptDatabaseImplement.Models.Operations", "Operation")
                        .WithMany("MoneyTransfers")
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BankYouBankruptDatabaseImplement.Models.MoneyTransferApplication", b =>
                {
                    b.HasOne("BankYouBankruptDatabaseImplement.Models.Applications", "Applications")
                        .WithMany("AplicationMoneyTransfer")
                        .HasForeignKey("AplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BankYouBankruptDatabaseImplement.Models.MoneyTransfer", "MoneyTransfer")
                        .WithMany("AplicationMoneyTransfer")
                        .HasForeignKey("MoneyTransferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BankYouBankruptDatabaseImplement.Models.MoneyTransferBill", b =>
                {
                    b.HasOne("BankYouBankruptDatabaseImplement.Models.Bills", "Bills")
                        .WithMany("MoneyTransferBills")
                        .HasForeignKey("BillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BankYouBankruptDatabaseImplement.Models.MoneyTransfer", "MoneyTransfer")
                        .WithMany("MoneyTransferBills")
                        .HasForeignKey("MoneyTransferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BankYouBankruptDatabaseImplement.Models.Operations", b =>
                {
                    b.HasOne("BankYouBankruptDatabaseImplement.Models.User", "User")
                        .WithMany("Operations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
